apply plugin: 'jacoco'
jacoco{
    toolVersion = '0.8.6'
}


//exclude the folders we do not want to check
def excludedPatterns = [
        '**/*Fragment*.*',
        '**/*Activity*.*',
        '**/*Adapter*.*',
        '**/*View*.*', // <-- this line is excluding classes ending w/ ViewModel
        '**/*ViewState*.*',
        '**/*ViewHolder*.*',
        '**/enum/**',
        '**/util/**',
        '**/R.class',
        '**/R$*.class',
        '**/BuildConfig.*',
        '**/Manifest*.*',
        '**/*$ViewInjector*.*',
        '**/*$ViewBinder*.*',
        '**/*$Lambda$*.*', // Jacoco can not handle several "$" in class name.
        '**/*Module.*', // Modules for Dagger.
        '**/*Dagger*.*', // Dagger auto-generated code.
        '**/*MembersInjector*.*', // Dagger auto-generated code.
        '**/*_Provide*Factory*.*',
        '**/*_Factory.*', //Dagger auto-generated code
        '**/*$*$*.*', // Anonymous classes generated by kotlin
        //add libraries
        'android/**/*.*',
        'com/**/*.*',
        'uk/**/*.*',
        'io/**/*.*',
        //remove what we don't test
        'androidTest/**/*.*',
        'test/**/*.*',
        '**/injector/**/*.*',
        '**/model/**/*.*',
        '**/mock/**/*.*',
        '**/event/**/*.*',
        '**/**_ViewBinding**',
        '**/databinding/*.*',
        '**/**Binding*.*',
        '**/*EventType.*',
        '**/**Mocked',
        'android/**/*.*',
        '**/*Test*.*',
        '**/HAEMCAM/com/databinding/databinding/*',
]

task jacoReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {


    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: excludedPatterns)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.from(files([mainSrc]))
    classDirectories.from(files([debugTree]))
    executionData.from(fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/debugAndroidTest/connected/*coverage.ec"
    ]))
}